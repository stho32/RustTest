name: Build, Test and Release

on:
  push:
    branches:
      - main

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - name: Install dependencies for cross-compilation
      run: sudo apt-get update && sudo apt-get install -y mingw-w64

    - name: Add Windows target
      run: rustup target add x86_64-pc-windows-gnu

    - name: Run tests
      run: cargo test
      working-directory: ./RustTest

    - name: Build Linux release
      run: cargo build --release
      working-directory: ./RustTest

    - name: Strip Linux binary
      run: strip ./RustTest/target/release/RustTest

    - name: Upload Linux release asset
      uses: actions/upload-artifact@v4
      with:
        name: linux-release
        path: ./RustTest/target/release/RustTest

    - name: Build Windows release
      run: cargo build --release --target x86_64-pc-windows-gnu
      working-directory: ./RustTest

    - name: Strip Windows binary
      run: strip ./RustTest/target/x86_64-pc-windows-gnu/release/RustTest.exe

    - name: Upload Windows release asset
      uses: actions/upload-artifact@v4
      with:
        name: windows-release
        path: ./RustTest/target/x86_64-pc-windows-gnu/release/RustTest.exe

  create-release:
    needs: [build-linux]
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Get current date and time
      id: datetime
      run: |
        echo "RELEASE_NAME=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV
        echo "TAG_NAME=release-$(date +'%Y%m%d%H%M%S')" >> $GITHUB_ENV

    - name: Create GitHub Tag
      id: create_tag
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag ${{ env.TAG_NAME }}
        git push origin ${{ env.TAG_NAME }}

    - name: Create GitHub Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.RELEASE_NAME }}
        body: |
          Release notes for ${{ env.RELEASE_NAME }}
        draft: false
        prerelease: false

    - name: Download Linux Release
      uses: actions/download-artifact@v3
      with:
        name: linux-release
        path: ./RustTest/target/release

    - name: Upload Linux Binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./RustTest/target/release/RustTest
        asset_name: RustTest-linux
        asset_content_type: application/octet-stream

    - name: Download Windows Release
      uses: actions/download-artifact@v3
      with:
        name: windows-release
        path: ./RustTest/target/x86_64-pc-windows-gnu/release

    - name: Upload Windows Binary to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./RustTest/target/x86_64-pc-windows-gnu/release/RustTest.exe
        asset_name: RustTest-windows.exe
        asset_content_type: application/octet-stream
